buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:0.5'
    }
}

if (!project.hasProperty('bintray_username')) ext.bintray_username = ''
if (!project.hasProperty('bintray_api_key')) ext.bintray_api_key = ''

apply from: 'gradle/bintray.gradle'


apply plugin: 'groovy'
apply plugin: 'maven-publish'
apply plugin: 'idea'

description = 'Gradle Buster plugin for running busterjs tests'
group = 'com.github.rundis'
version = '0.2.4.2'


repositories {
    mavenCentral()
}


/*configurations {
    sourceArchives
}*/

dependencies {

    compile gradleApi(), localGroovy(),
            'net.sf.jpathwatch:jpathwatch:0.95'

    compile("com.github.detro.ghostdriver:phantomjsdriver:1.0.4") {
        exclude group: "commons-logging", module: "commons-logging"
    }
    compile("org.seleniumhq.selenium:selenium-java:2.33.0") {
        exclude group: "commons-logging", module: "commons-logging"
    }
    testCompile("org.fusesource:sigar:1.6.4:native") {
        exclude group: "log4j", module: "log4j"
    }
    testCompile("org.fusesource:sigar:1.6.4") {
        exclude group: "log4j", module: "log4j"
    }


    testCompile ('org.spockframework:spock-core:0.7-groovy-2.0') {
        exclude group: 'org.codehaus.groovy', module: 'groovy-all'
    }
    testCompile 'cglib:cglib-nodep:2.2.2'

}

sourceCompatibility = 1.6
targetCompatibility = 1.6


task sourceJar(type: Jar) {
    from sourceSets.main.allSource
}



publishing {
    publications {
        mavenCustom(MavenPublication) {
            from components.java
            artifact sourceJar

            setArtifactId('gradle-buster-plugin')
        }
    }
}


sourceSets {
    integrationTest {
        groovy {
            srcDir 'src/integrationtest/groovy'
        }
        resources {
            srcDir 'src/integrationtest/resources'
        }
        compileClasspath += sourceSets.test.runtimeClasspath
    }
}

task integrationTest(type: Test) {
    description = "Runs Integration Tests"
    dependsOn 'jar'
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath += sourceSets.integrationTest.runtimeClasspath
}
build.dependsOn integrationTest


task wrapper(type: Wrapper) {
    gradleVersion = '2.1'
}
