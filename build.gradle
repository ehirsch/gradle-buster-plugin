plugins {
    id 'groovy'
    id 'idea'
    id 'nu.studer.plugindev' version '1.0.3'
}

description = 'Gradle Buster plugin for running busterjs tests'
group = 'com.github.rundis'
version = '0.2.4.2'

dependencies {

    compile gradleApi(), localGroovy(),
            'net.sf.jpathwatch:jpathwatch:0.95'

    compile("com.github.detro.ghostdriver:phantomjsdriver:1.0.4") {
        exclude group: "commons-logging", module: "commons-logging"
    }
    compile("org.seleniumhq.selenium:selenium-java:2.33.0") {
        exclude group: "commons-logging", module: "commons-logging"
    }
    testCompile("org.fusesource:sigar:1.6.4:native") {
        exclude group: "log4j", module: "log4j"
    }
    testCompile("org.fusesource:sigar:1.6.4") {
        exclude group: "log4j", module: "log4j"
    }


    testCompile ('org.spockframework:spock-core:0.7-groovy-2.0') {
        exclude group: 'org.codehaus.groovy', module: 'groovy-all'
    }
    testCompile 'cglib:cglib-nodep:2.2.2'

}

sourceCompatibility = 1.6
targetCompatibility = 1.6



plugindev {
    pluginImplementationClass 'com.github.rundis.buster.BusterPlugin'
    pluginDescription 'A gradle plugin for running buster.js JavaScript tests'
    pluginLicenses 'MIT' // DOH its really BSD
    pluginTags 'gradle', 'plugin', 'buster', 'javascript', 'node'
    authorId 'rundis'
    authorName 'Magnus Rundberget'
    authorEmail 'mrundberget@hotmail.com'
    projectUrl 'https://github.com/rundis/gradle-buster-plugin'
    projectInceptionYear '2013'
    done() // do not omit this
}

bintray {
    user = project.hasProperty( 'bintray_username' ) ? project.getProperty( 'bintray_username' ) : null
    key = project.hasProperty( 'bintray_api_key' ) ? project.getProperty( 'bintray_api_key' ) : null
    pkg.repo = 'maven'
}






sourceSets {
    integrationTest {
        groovy {
            srcDir 'src/integrationtest/groovy'
        }
        resources {
            srcDir 'src/integrationtest/resources'
        }
        compileClasspath += sourceSets.test.runtimeClasspath
    }
}

task integrationTest(type: Test) {
    description = "Runs Integration Tests"
    dependsOn 'jar'
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath += sourceSets.integrationTest.runtimeClasspath
}
build.dependsOn integrationTest


task wrapper(type: Wrapper) {
    gradleVersion = '2.2'
}
